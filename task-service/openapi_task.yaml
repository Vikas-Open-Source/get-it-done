openapi: 3.0.3
info:
  title: Task List API
  description: API for managing tasks list
  version: 0.0.1
servers:
  - url: '{host}/api'
    variables:
      host:
        default: http://localhost:8080
paths:
  /directories/{directoryId}/tasks/v1:
    get:
      summary: Get all tasks
      description: Retrieve a list of all tasks
      parameters:
        - in: path
          required: false
          name: directoryId
          schema:
            type: string
          description: Filter tasks by directory id
      responses:
        '200':
          description: A list of all tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskV1'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Create a new task
      description: Add a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskV1'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskV1'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/ServerError'
  /directories/{directoryId}/tasks/v1/{taskId}:
    get:
      summary: Get a task by ID
      description: Retrieve a specific task by its ID
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskV1'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/ServerError'
    put:
      summary: Update a task
      description: Update the details of an existing task
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskV1'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskV1'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete a task
      description: Remove a task from the list
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Task deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '5XX':
          $ref: '#/components/responses/ServerError'
components:
  schemas:
    TaskV1:
      type: object
      properties:
        taskId:
          type: string
          example: 1
        name:
          type: string
          example: Shopping
        description:
          type: string
          example: Buy kitkat
        directory:
          $ref: '#/components/schemas/DirectoryV1'
        assignee:
          $ref: '#/components/schemas/UserV1'
        createdDate:
          type: string
          format: date-time
          example: "2024-11-22"
        updatedDate:
          type: string
          format: date-time
          example: "2024-11-22"
        completeByDate:
          type: string
          format: date-time
          example: "2024-11-23"
      required:
        - taskId
        - name
        - directory
        - createdDate
        - updatedDate
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"